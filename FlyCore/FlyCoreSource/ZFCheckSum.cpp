//---------------------------------------------------------------------------
// ZFCheckSum.cpp
// Функция заимствованная из внешнего источника 13.03.2019
// Функция для расчета и сверки контрольной суммы формы обмена БИ
//---------------------------------------------------------------------------
#include <stdafx.h>
#pragma   hdrstop

//---------------------------------------------------------------------------
int ZCheckSum(char* Str, long* CheckSumm)
{
	static unsigned char Cod[160]= { 
		100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
		100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
		100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
		100, 100,   0,  72, 100, 100, 100,  73, 100, 100,
		 15,  16,  20,  17,  14,  18,  13,  19,  10,   1,
		  2,   3,   4,   5,   6,   7,   8,   9,  12,  11,
		 70,  68,  69,  71, 100, 100, 100, 100,  52, 100,
		 53,  54, 100,  55,  56, 100,  57, 100,  58, 100,
		100,  59,  60,  61, 100,  62,  63,  64, 100,  65,
		 66, 100,  67, 100, 100, 100, 100, 100, 100, 100,
		100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
		100, 100, 100, 100, 100, 100, 100, 100, 100, 100,
		100, 100, 100, 100, 100, 100, 100, 100,  21,  22,
		 23,  24,  25,  26,  27,  28,  29,  30,  31,  32,
		 33,  34,  35,  36,  37,  38,  39,  40,  41,  42,
		 43,  44,  45,  46, 100,  47,  48,  49,  50,  51} ;
	unsigned char JJ ;
	int   N1, N2, m[100], i, j, k, h ;
	long  sigm, sigm1 ;
	int   pods = 20 ;			//подставка для m0
	char  k_fr[] = "\r\n" ;
	char  Buf_c ; 

	N1 = strlen(Str);
	for (i=N1-1; !(Str[i]=='C' || Str[i]=='С') && i>0; i--);
	if (!i) i = N1;				// С - не нашли
	Buf_c = Str[i] ;  
	Str[i]= 0 ;
	N1 = strlen(Str) ;
	N2 = strlen(k_fr) ;
	m[0] = pods ;
	for (j=i=0; j<100; j++) {
		m[j+1] = m[j]+strcspn(Str+i,k_fr) ;
		if (m[j+1]>= N1+pods-N2*(j+1)) break ;
		i = m[j+1]-pods+N2*(j+1) ;
	}
	sigm1 = 0L ;
	for (i=h=0; i<=j; i++) {
		for (k=m[i], sigm=0L; k<m[i+1]; k++, h++) {
			JJ = (unsigned char)Str[h] ;
			sigm+= (long)(k*(short)((JJ<160) ? Cod[JJ]:100)) ;
		}
		h+= N2 ;
		sigm1+= sigm ;
	}
	// sigm=atol(Str+strlen(Str)+1);
	if(sigm1 == atol(Str+strlen(Str)+1) && Buf_c!=0) i = 0 ;
	else i = 1 ;
	Str[strlen(Str)] = Buf_c ;
	if(CheckSumm!= nullptr) *CheckSumm=sigm1 ;
	return i ;
}

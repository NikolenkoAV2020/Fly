//--------------------------------------------------------------------------------
// ZMForceAtmSMA62.cpp
// А. Николенко 03.08.2018
//--------------------------------------------------------------------------------
#include <stdafx.h>
#pragma   hdrstop
#include <FlyMMath.h>	// Математические функции
#include <FlyTime.h>	// Всё про время

#include <FlyCoreSource\\ModType.h>
#include <FlyCoreSource\\ModGlobal.h>
#include <FlyCoreSource\\ZMForceAtmSMA62.h>

//--------------------------------------------------------------------------------
// 
// ro = g0 * Ai * exp(k1i*(h-hi)^2 - k2i(h-hi)) в кг/м3
//
// Коэффициенты предполагают высоту в км, а плтность в кг/м3 
static double CMA62H[9]  = { // Высота [км]
	0,			20,			60,			100,		150, 
	300,		600,		900,		1000 } ;	
static double CMA62K1[9] = { // k1 коэффициент [1/км2]
	-0.2639e-2,	0.4407e-3,	-0.256e-2,	0.14688e-2,	0.8004e-4, 
	0.7111e-5,	0.1831e-5,	0, 0 } ;
static double CMA62K2[9] = { // k2 коэффициент [1/км]
	0.7825e-1,	0.16375e-0, 0.5905e-1,	0.1787e-0,	0.37336e-1, 
	0.15467e-1, 0.9275e-2,	0.954e-2,	1e-3 } ;
static double CMA62A[9]  = { // A  коэффициент [кг * сек2/м4]
	0.125,		0.9091e-2,	0.263e-4,	0.4141e-7,	0.21727e-9, 
	0.48607e-11,0.8904e-13,	0.6497e-14,	1e-17 } ;

static double CMA62alfa = 1.0/298.257839303 ;
static double CMA62Re   = 6378.136 ;
static double CMA62g0   = 9.80665 ;

//--------------------------------------------------------------------------------
int ZMAtmSMA62::Calc(double* X, double& Ro)
{
	// Радиус в дткм
	double R = FR(X) ;
	// Высота в км
	double H = 1e4*R - CMA62Re*(1.0 - CMA62alfa*X[2]*X[2]/R/R) ;
	int    i = 0 ;
	if ( H < CMA62H[0] ) H = 0.0 ;
	else { for (i=0 ; i<7 ; i++) { if ( H>=CMA62H[i] && H<CMA62H[i+1] ) break ; } }
	if ( i==7 ) { Ro = 0.0 ; return 0 ; }
	// Плотность атмосферы в кг/м3
	Ro = CMA62A[i]*CMA62g0 * exp( CMA62K1[i]*pow(H-CMA62H[i],2) - CMA62K2[i]*(H-CMA62H[i]) ) ; 
	return 0 ;
}

//--------------------------------------------------------------------------------
int ZMAtmSMA62::Calc4(double H, double& Ro)
{
	double K[40]={
    -10.,    1.25000e-01,   0.00000e+00,   0.00000e+00,
      0.,    1.25000e-01,  -7.82500e-02,  -2.63900e-03,
     20.,    9.09000e-03,   1.63800e-01,   4.40700e-04,
     60.,    2.63000e-05,   5.90500e-01,  -2.56000e-04,
    100.,    4.14100e-08,   1.78700e-01,   1.46900e-03,
    150.,    2.17300e-10,   3.73400e-02,   8.00400e-05,
    300.,    4.86100e-12,   1.54700e-02,   7.11100e-06,
    600.,    8.90400e-14,   9.27500e-03,   1.83100e-06,
    900.,    6.49700e-15,   9.54000e-03,   0.00000e+00,
	1500.,   0.00000e+00,   0.00000e+00,   0.00000e+00};

	Ro = 0 ; 
	if(H<0. || H>1500.) return 0 ;
	double dH;
	for(int i=0 ; i<36 ; i+=4) {
		if(H>=K[i] && H<K[i+4]) {
			dH=H-K[i];
			Ro=CMA62g0*K[i+1]*exp(dH*(dH*K[i+3]-K[i+2]));
			break;
	}	}
	return 0 ;
}

//--------------------------------------------------------------------------------
//--------------------------------------------------------------------------------
// ZMForceAtmSMA81.cpp
// А. Николенко 03.08.2018
//--------------------------------------------------------------------------------
#include <stdafx.h>
#pragma   hdrstop
#include <FlyMMath.h>	// Математические функции
#include <FlyTime.h>	// Всё про время

#include <FlyCoreSource\\ModType.h>
#include <FlyCoreSource\\ModGlobal.h>
#include <FlyCoreSource\\ZMForceAtmSMA81.h>

//--------------------------------------------------------------------------------
// 
// ro = g0 * Ai * exp(k1i*(h-hi)^2 - k2i(h-hi)) в кг/м3
//
// Коэффициенты предполагают высоту в км, а плтность в кг/м3 
static double CMA81H[8]  = { // Высота [км]
	0,			  20,			60,				100, 
	150,		  300,			600,			900 } ;
static double CMA81K1[8] = { // k1 коэффициент [1/км2]
	-0.20452e-2,  0.62669e-3,	-0.86999e-3,	0.12870e-2, 
	0.10167e-3,	  0.97266e-5,	0.15127e-4,		0 } ;
static double CMA81K2[8] = { // k2 коэффициент [1/км]
	0.90764e-1,   0.16739e-0,	0.12378e-0,		0.17527e-0, 
	0.45825e-1,   0.19885e-1,	0.14474e-1,		0.39247e-2 } ;
static double CMA81A[8]  = { // A  коэффициент [кг * сек2/м4]
	0.12522,	  0.91907e-2,	0.31655e-4,		0.54733e-7, 
	0.20474e-9,	  0.19019e-11,	0.11495e-13,	0.58038e-15 } ;
static double CMA81alfa = 1.0/298.257839303 ;
static double CMA81Re   = 6378.136 ;
static double CMA81g0   = 9.80665 ;

//--------------------------------------------------------------------------------
int ZMAtmSMA81::Calc(double* X, double& Ro)
{
	// Радиус в дткм
	double R = FR(X) ;
	// Высота в км
	double H = 1e4*R-CMA81Re*(1.0-CMA81alfa*X[2]*X[2]/R/R) ;
	int    i = 0 ;
	if (H<CMA81H[0]) H=0.0 ;
	else { for (i=0 ; i<7 ; i++) { if ( H>=CMA81H[i] && H<CMA81H[i+1] ) break ; } }
	if ( i==7 ) { Ro = 0.0 ; return 0 ; }
	// Плотность атмосферы в кг/м3
	Ro = CMA81A[i]*CMA81g0 * exp( CMA81K1[i]*pow(H-CMA81H[i],2) - CMA81K2[i]*(H-CMA81H[i]) ) ; 
	return 0 ;
}

//--------------------------------------------------------------------------------
int ZMAtmSMA81::Calc4(double H, double& Ro)
{
	double K[]={
		-10.,  1.25220e-01,  0.00000e+00,  0.00000e+00,
		  0.,  1.25220e-01,  9.07640e-02, -2.04520e-03,
		 20.,  9.19070e-03,  1.67390e-01,  6.26690e-04,
		 60.,  3.16550e-05,  1.23780e-01, -8.69990e-04,
		100.,  5.47330e-08,  1.75270e-01,  1.28700e-03,
		150.,  2.04740e-10,  4.58250e-02,  1.01670e-04,
		300.,  1.90190e-12,  1.98850e-02,  9.72660e-06,
		600.,  1.14950e-14,  1.44740e-02,  1.51270e-05,
		900.,  5.80380e-16,  3.92470e-03,  0.00000e+00,
	   1500.,  0.00000e+00,  0.00000e+00,  0.00000e+00 };
	
	Ro = 0 ;
	if (H<0. || H>1500.) return 0 ;
	double dH ;
	for (int i=0 ; i<36 ; i+=4) { 
		if(H>=K[i] && H<K[i+4]) {
			dH = H-K[i] ;
			Ro = CMA81g0*K[i+1]*exp(dH*(dH*K[i+3]-K[i+2]));
			break;
	}	}
	return 0 ;
}

//--------------------------------------------------------------------------------


